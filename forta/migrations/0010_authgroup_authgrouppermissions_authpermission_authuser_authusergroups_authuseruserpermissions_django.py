# Generated by Django 3.2.9 on 2021-12-10 02:08

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('forta', '0009_auto_20211209_1144'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TickerInformation',
            fields=[
                ('ticker', models.CharField(db_column='Ticker', max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=256, unique=True)),
                ('currency', models.CharField(blank=True, db_column='Currency', max_length=45, null=True)),
                ('country', models.CharField(blank=True, db_column='Country', max_length=45, null=True)),
                ('update_date', models.DateTimeField(blank=True, db_column='Update_Date', null=True)),
                ('last_price', models.FloatField(blank=True, db_column='Last_Price', null=True)),
                ('description', models.TextField(blank=True, db_column='Description', null=True)),
                ('logo_url', models.CharField(blank=True, db_column='Logo_Url', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Ticker_Information',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TickerIndicators',
            fields=[
                ('ticker', models.OneToOneField(db_column='Ticker', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='forta.tickerinformation')),
                ('update_date', models.DateTimeField(blank=True, db_column='Update_Date', null=True)),
                ('last_price', models.FloatField(blank=True, db_column='Last_Price', null=True)),
                ('market_cap', models.FloatField(blank=True, db_column='Market_Cap', null=True)),
                ('earnings', models.FloatField(blank=True, db_column='Earnings', null=True)),
                ('revenue_growth', models.FloatField(blank=True, db_column='Revenue_Growth', null=True)),
                ('price_to_earnings', models.FloatField(blank=True, db_column='Price_To_Earnings', null=True)),
            ],
            options={
                'db_table': 'Ticker_Indicators',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TickerPrices',
            fields=[
                ('ticker', models.OneToOneField(db_column='Ticker', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='forta.tickerinformation')),
                ('update_date', models.DateTimeField(blank=True, db_column='Update_Date', null=True)),
                ('day_prices', models.JSONField(blank=True, db_column='Day_Prices', null=True)),
            ],
            options={
                'db_table': 'Ticker_Prices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TickerSector',
            fields=[
                ('ticker', models.OneToOneField(db_column='Ticker', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='forta.tickerinformation')),
                ('sector', models.CharField(blank=True, db_column='Sector', max_length=45, null=True)),
            ],
            options={
                'db_table': 'Ticker_Sector',
                'managed': False,
            },
        ),
    ]
